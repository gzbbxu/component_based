apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.example.administrator.component_based"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        //arouter
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.ext.appcompatV7
    implementation rootProject.ext.constraintLayout
    testImplementation 'junit:junit:4.12'
    //router
    implementation (rootProject.ext.arouterApi){
        exclude group: 'com.android.support'
    }
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'


  /*  implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'*/
/*    implementation 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'*/
    implementation 'com.android.support:design:27.1.1'
    if (isModule.toBoolean()) {
        //当isDebug true，app得依赖基础库，保证app不报错
        implementation project(':base')
    } else {
        implementation project(':module1')
        implementation project(':module2')
        implementation project(':module3')
        implementation project(':loginmodule')
    }
}
